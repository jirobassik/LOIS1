# Generated from D:/Programs/PyCharm 2021.3.3/LOIS1\formula_validatoin.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,35,144,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,
        5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,
        12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,
        19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,
        25,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,
        30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,0,0,35,1,1,3,2,5,3,7,
        4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,
        16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,
        27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,1,0,0,143,0,1,
        1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
        0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
        0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,
        0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,
        0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,
        0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,
        0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,1,71,1,0,
        0,0,3,73,1,0,0,0,5,75,1,0,0,0,7,77,1,0,0,0,9,79,1,0,0,0,11,81,1,
        0,0,0,13,83,1,0,0,0,15,85,1,0,0,0,17,87,1,0,0,0,19,89,1,0,0,0,21,
        91,1,0,0,0,23,93,1,0,0,0,25,95,1,0,0,0,27,97,1,0,0,0,29,99,1,0,0,
        0,31,101,1,0,0,0,33,103,1,0,0,0,35,105,1,0,0,0,37,107,1,0,0,0,39,
        109,1,0,0,0,41,111,1,0,0,0,43,113,1,0,0,0,45,115,1,0,0,0,47,117,
        1,0,0,0,49,119,1,0,0,0,51,121,1,0,0,0,53,123,1,0,0,0,55,125,1,0,
        0,0,57,128,1,0,0,0,59,131,1,0,0,0,61,134,1,0,0,0,63,136,1,0,0,0,
        65,138,1,0,0,0,67,140,1,0,0,0,69,142,1,0,0,0,71,72,5,65,0,0,72,2,
        1,0,0,0,73,74,5,66,0,0,74,4,1,0,0,0,75,76,5,67,0,0,76,6,1,0,0,0,
        77,78,5,68,0,0,78,8,1,0,0,0,79,80,5,69,0,0,80,10,1,0,0,0,81,82,5,
        70,0,0,82,12,1,0,0,0,83,84,5,71,0,0,84,14,1,0,0,0,85,86,5,72,0,0,
        86,16,1,0,0,0,87,88,5,73,0,0,88,18,1,0,0,0,89,90,5,74,0,0,90,20,
        1,0,0,0,91,92,5,75,0,0,92,22,1,0,0,0,93,94,5,76,0,0,94,24,1,0,0,
        0,95,96,5,77,0,0,96,26,1,0,0,0,97,98,5,78,0,0,98,28,1,0,0,0,99,100,
        5,79,0,0,100,30,1,0,0,0,101,102,5,80,0,0,102,32,1,0,0,0,103,104,
        5,81,0,0,104,34,1,0,0,0,105,106,5,82,0,0,106,36,1,0,0,0,107,108,
        5,83,0,0,108,38,1,0,0,0,109,110,5,84,0,0,110,40,1,0,0,0,111,112,
        5,85,0,0,112,42,1,0,0,0,113,114,5,86,0,0,114,44,1,0,0,0,115,116,
        5,87,0,0,116,46,1,0,0,0,117,118,5,88,0,0,118,48,1,0,0,0,119,120,
        5,89,0,0,120,50,1,0,0,0,121,122,5,90,0,0,122,52,1,0,0,0,123,124,
        5,33,0,0,124,54,1,0,0,0,125,126,5,47,0,0,126,127,5,92,0,0,127,56,
        1,0,0,0,128,129,5,92,0,0,129,130,5,47,0,0,130,58,1,0,0,0,131,132,
        5,45,0,0,132,133,5,62,0,0,133,60,1,0,0,0,134,135,5,126,0,0,135,62,
        1,0,0,0,136,137,5,49,0,0,137,64,1,0,0,0,138,139,5,48,0,0,139,66,
        1,0,0,0,140,141,5,40,0,0,141,68,1,0,0,0,142,143,5,41,0,0,143,70,
        1,0,0,0,1,0,0
    ]

class formula_validatoinLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    NEGATION = 27
    CONJUNCTION = 28
    DISJUNCTION = 29
    IMPLICATION = 30
    EQUIVALENT = 31
    LOGIC_ONE = 32
    LOGIC_ZERO = 33
    OPEN_CIR_BRACKET = 34
    CLOSE_CIR_BRACKET = 35

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'A'", "'B'", "'C'", "'D'", "'E'", "'F'", "'G'", "'H'", "'I'", 
            "'J'", "'K'", "'L'", "'M'", "'N'", "'O'", "'P'", "'Q'", "'R'", 
            "'S'", "'T'", "'U'", "'V'", "'W'", "'X'", "'Y'", "'Z'", "'!'", 
            "'/\\'", "'\\/'", "'->'", "'~'", "'1'", "'0'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "NEGATION", "CONJUNCTION", "DISJUNCTION", "IMPLICATION", "EQUIVALENT", 
            "LOGIC_ONE", "LOGIC_ZERO", "OPEN_CIR_BRACKET", "CLOSE_CIR_BRACKET" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "NEGATION", "CONJUNCTION", "DISJUNCTION", "IMPLICATION", 
                  "EQUIVALENT", "LOGIC_ONE", "LOGIC_ZERO", "OPEN_CIR_BRACKET", 
                  "CLOSE_CIR_BRACKET" ]

    grammarFileName = "formula_validatoin.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


